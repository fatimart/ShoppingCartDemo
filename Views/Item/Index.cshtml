@model WebApplication2.ViewModel.ItemViewModel
@{
    ViewBag.Title = "Index";
    List<SelectListItem> li = new List<SelectListItem>();
    li.Add(new SelectListItem() { Text = "App", Value = "20" });
    li.Add(new SelectListItem() { Text = "App3", Value = "200" });

}

<h2>Add New Item</h2>

<script type="text/javascript">
    $(document).ready(function() {
        $("#btnSave").click(function() {
            SaveItem();
        });
    });
    function ResetItem() {
        $("#CategoryId").val("1");
        $("#ItemCode").val("");
        $("#ItemName").val("");
        $("#Description").val("");
        $("#ItemPrice").val("");
        $("#ImagePath").val("");
    }
    function SaveItem() {
        var formData = new FormData();
        formData.append("CategoryId", $("#CategoryId").val());
        formData.append("ItemCode", $("#ItemCode").val());
        formData.append("ItemName", $("#ItemName").val());
        formData.append("Description", $("#Description").val());
        formData.append("ItemPrice", $("#ItemPrice").val());
        formData.append("ImagePath", $("#ImagePath").get(0).files[0]);
        $.ajax({
            async: true,
            dataType: 'JSON',
            type: 'POST',
            contentType: false,
            processData: false,
            url: '/Item/Index',
            data: formData,
            success: function (data) {
                if (data.Success)
                {
                    alert(data.Message);
                    ResetItem();
                }
            },
            error: function() {
                alert("There is some problem to add Item.");
            }
        });
    }
</script>

<div class="container">

    <div class="col-md-4">
        <div class="form-group">
            Category :
            @Html.DropDownList("Category", ViewBag.categoryList as SelectList, "Select any ", new { @class = "form-control" })

        </div>
    </div>
       

    <div class="col-md-4">
        <div class="form-group">
            Item Code :
            @Html.TextBoxFor(model => model.ItemCode, new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>


    <div class="col-md-4">
        <div class="form-group">
            Item Name :
            @Html.TextBoxFor(model => model.ItemName, new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            Description :
            @Html.TextBoxFor(model => model.Description, new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            Item Price :
            @Html.TextBoxFor(model => model.ItemPrice, new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            Item Price :
            @Html.TextBoxFor(model => model.ImagePath, new { type = "file", @class = "form-control" })
        </div>
    </div>

    <div>
        <input type="button" value="Save" name="save" class="btn btn-primary" id="btnSave" />
        &nbsp;
        <input type="button" value="Reset" name="reset" class="btn btn-danger" />
    </div>
</div>
